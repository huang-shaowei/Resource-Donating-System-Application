/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.CommunityCenter;

import Business.EcoSystem;
import Business.Enterprise.CommunityCenterEnterprise;
import Business.Enterprise.Enterprise;
import Business.Organization.CommunityCenterOrganization;
import Business.Organization.FoodOrganization;
import Business.Organization.Organization;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.FoodWorkRequest;
import Business.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;


/**
 *
 * @author Trupti
 */
public class FoodWorkAreaJPanel extends javax.swing.JPanel {
    JPanel userProcessContainer;
    UserAccount account;
    FoodOrganization organization;
    Enterprise enterprise;
    EcoSystem business;
    /**
     * Creates new form FoodWorkAreaJPanel
     */
    public FoodWorkAreaJPanel(JPanel userProcessContainer, UserAccount account, FoodOrganization organization, Enterprise enterprise, EcoSystem business) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.account = account;
        this.organization = (FoodOrganization)organization;
        this.enterprise = enterprise;
        this.business = business;
        
        populateTable();
    }

    public void populateTable(){
        DefaultTableModel model = (DefaultTableModel)foodRequestTbl.getModel();
        
        model.setRowCount(0);
      for(Organization orga : enterprise.getOrganizationDirectory().getOrganizationList()){
             if(orga instanceof FoodOrganization){
                    for(WorkRequest request:orga.getWorkQueue().getWorkRequestList()){
                       if(request.getStatus().equals("Give") && (request.getQuantity()!=0)){
                       Object[] row = new Object[5];

                        row[0] = request;

                        row[1] = request.getQuantity();
                        row[2] = request.getDetails();
                        row[3] = request.getRequestorName();
                        row[4] = request.getRequestDate();

                        row[3] = request.getApproverName()== null ? null : request.getApproverName().getEmployee().getName();


                        model.addRow(row);
                       }
                    }
             }
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        processBtn = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        foodRequestTbl = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        refreshBtn = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();

        processBtn.setFont(new java.awt.Font("Lucida Fax", 2, 12)); // NOI18N
        processBtn.setText("Process");
        processBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                processBtnActionPerformed(evt);
            }
        });

        foodRequestTbl.setFont(new java.awt.Font("Lucida Fax", 2, 12)); // NOI18N
        foodRequestTbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Food Name", "Food Amount", "Food Description", "Donating from", "Donating Date"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(foodRequestTbl);
        if (foodRequestTbl.getColumnModel().getColumnCount() > 0) {
            foodRequestTbl.getColumnModel().getColumn(0).setResizable(false);
            foodRequestTbl.getColumnModel().getColumn(1).setResizable(false);
            foodRequestTbl.getColumnModel().getColumn(2).setResizable(false);
            foodRequestTbl.getColumnModel().getColumn(3).setResizable(false);
            foodRequestTbl.getColumnModel().getColumn(4).setResizable(false);
        }

        jLabel1.setFont(new java.awt.Font("Lucida Fax", 3, 18)); // NOI18N
        jLabel1.setText("Food Department");

        refreshBtn.setFont(new java.awt.Font("Lucida Fax", 2, 12)); // NOI18N
        refreshBtn.setText("Refresh");
        refreshBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshBtnActionPerformed(evt);
            }
        });

        jLabel2.setText("Food in Stock");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap(47, Short.MAX_VALUE)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 435, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(59, 59, 59)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(refreshBtn)))
                .addGap(59, 59, 59))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(152, 152, 152)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(227, 227, 227)
                        .addComponent(processBtn)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 55, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(refreshBtn)
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(processBtn))
                    .addComponent(jLabel2))
                .addGap(68, 68, 68))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void processBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_processBtnActionPerformed
        // TODO add your handling code here:
        int selectedRow = foodRequestTbl.getSelectedRow();
        
        if (selectedRow < 0){
            JOptionPane.showMessageDialog(this,"Please select food to distribute","Eror",JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        FoodWorkRequest request = (FoodWorkRequest)foodRequestTbl.getValueAt(selectedRow, 0);
     
        
        
        FoodSendingJPanel foodSendingJPanel = new FoodSendingJPanel(userProcessContainer, account,organization, enterprise, business,request);
        userProcessContainer.add("FoodSendingJPanel", foodSendingJPanel);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.next(userProcessContainer);
    }//GEN-LAST:event_processBtnActionPerformed

    private void refreshBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshBtnActionPerformed
        // TODO add your handling code here:
        populateTable();
    }//GEN-LAST:event_refreshBtnActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable foodRequestTbl;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton processBtn;
    private javax.swing.JButton refreshBtn;
    // End of variables declaration//GEN-END:variables

}
